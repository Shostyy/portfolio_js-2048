{"version":3,"sources":["scripts/main.js"],"names":["gameField","document","getElementById","Game","field","isGameOver","totalValue","clearField","putRandomNumber","countTotalValue","reRender","row","col","isFieldFull","complete","xAxis","Math","floor","random","yAxis","randomValue","innerHTML","newFieldRows","map","newFieldCells","value","join","newRow","newCol","game","scoreBoard","startButton","startMessage","winMessage","lostMessage","handleKeyPress","keyEvent","key","goUp","goDown","goLeft","goRight","isGameOverMethod","has2048Value","classList","remove","removeEventListener","innerText","onclick","startGame","add","addEventListener"],"mappings":"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","file":"main.e70ca860.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst gameField = document.getElementById('gameArea');\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.field = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ];\r\n    this.isGameOver = false;\r\n    this.totalValue = 0;\r\n  }\r\n\r\n  startGame() {\r\n    this.clearField();\r\n    this.putRandomNumber();\r\n    this.putRandomNumber();\r\n    this.countTotalValue();\r\n    this.reRender();\r\n  }\r\n\r\n  clearField() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        this.field[row][col] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  putRandomNumber() {\r\n    if (this.isFieldFull()) {\r\n      return;\r\n    }\r\n\r\n    let complete = false;\r\n\r\n    while (!complete) {\r\n      const xAxis = Math.floor(Math.random() * 4);\r\n      const yAxis = Math.floor(Math.random() * 4);\r\n      const randomValue = Math.random() < 0.9 ? 2 : 4;\r\n\r\n      if (this.field[xAxis][yAxis] === 0) {\r\n        this.field[xAxis][yAxis] = randomValue;\r\n        complete = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  reRender() {\r\n    gameField.innerHTML = '';\r\n\r\n    const newFieldRows = this.field.map((row) => {\r\n      const newFieldCells = row.map((value) => {\r\n        if (value !== 0) {\r\n          return `<td class=\"field-cell field-cell--${value}\">${value}</td>`;\r\n        } else {\r\n          return '<td class=\"field-cell\"></td>';\r\n        }\r\n      });\r\n\r\n      return `<tr class=\"field-row\">${newFieldCells.join('')}</tr>`;\r\n    });\r\n\r\n    gameField.innerHTML = newFieldRows.join('');\r\n  }\r\n\r\n  goUp() {\r\n    for (let col = 0; col < 4; col++) {\r\n      for (let row = 1; row < 4; row++) {\r\n        if (this.field[row][col] !== 0) {\r\n          let newRow = row;\r\n\r\n          while (newRow > 0\r\n            && (this.field[newRow - 1][col] === 0\r\n              || this.field[newRow - 1][col] === this.field[newRow][col])) {\r\n            if (this.field[newRow - 1][col] === this.field[newRow][col]) {\r\n              this.field[newRow - 1][col] *= 2;\r\n              this.field[newRow][col] = 0;\r\n            } else if (this.field[newRow - 1][col] === 0) {\r\n              this.field[newRow - 1][col] = this.field[newRow][col];\r\n              this.field[newRow][col] = 0;\r\n            }\r\n            newRow--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.putRandomNumber();\r\n  }\r\n\r\n  goDown() {\r\n    for (let col = 0; col < 4; col++) {\r\n      for (let row = 2; row >= 0; row--) {\r\n        if (this.field[row][col] !== 0) {\r\n          let newRow = row;\r\n\r\n          while (newRow < 3\r\n            && (this.field[newRow + 1][col] === 0\r\n              || this.field[newRow + 1][col] === this.field[newRow][col])) {\r\n            if (this.field[newRow + 1][col] === this.field[newRow][col]) {\r\n              this.field[newRow + 1][col] *= 2;\r\n              this.field[newRow][col] = 0;\r\n            } else if (this.field[newRow + 1][col] === 0) {\r\n              this.field[newRow + 1][col] = this.field[newRow][col];\r\n              this.field[newRow][col] = 0;\r\n            }\r\n            newRow++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.putRandomNumber();\r\n  }\r\n\r\n  goLeft() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 1; col < 4; col++) {\r\n        if (this.field[row][col] !== 0) {\r\n          let newCol = col;\r\n\r\n          while (newCol > 0\r\n            && (this.field[row][newCol - 1] === 0\r\n              || this.field[row][newCol - 1] === this.field[row][newCol])) {\r\n            if (this.field[row][newCol - 1] === this.field[row][newCol]) {\r\n              this.field[row][newCol - 1] *= 2;\r\n              this.field[row][newCol] = 0;\r\n            } else if (this.field[row][newCol - 1] === 0) {\r\n              this.field[row][newCol - 1] = this.field[row][newCol];\r\n              this.field[row][newCol] = 0;\r\n            }\r\n            newCol--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.putRandomNumber();\r\n  }\r\n\r\n  goRight() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 2; col >= 0; col--) {\r\n        if (this.field[row][col] !== 0) {\r\n          let newCol = col;\r\n\r\n          while (newCol < 3\r\n            && (this.field[row][newCol + 1] === 0\r\n              || this.field[row][newCol + 1] === this.field[row][newCol])) {\r\n            if (this.field[row][newCol + 1] === this.field[row][newCol]) {\r\n              this.field[row][newCol + 1] *= 2;\r\n              this.field[row][newCol] = 0;\r\n            } else if (this.field[row][newCol + 1] === 0) {\r\n              this.field[row][newCol + 1] = this.field[row][newCol];\r\n              this.field[row][newCol] = 0;\r\n            }\r\n            newCol++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.putRandomNumber();\r\n  }\r\n\r\n  isGameOverMethod() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        if (this.field[row][col] === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 3; col++) {\r\n        if (this.field[row][col] === this.field[row][col + 1]) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let col = 0; col < 4; col++) {\r\n      for (let row = 0; row < 3; row++) {\r\n        if (this.field[row][col] === this.field[row + 1][col]) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.isGameOver = true;\r\n  }\r\n\r\n  countTotalValue() {\r\n    let totalValue = 0;\r\n\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        totalValue += this.field[row][col];\r\n      }\r\n    }\r\n\r\n    this.totalValue = totalValue;\r\n  }\r\n\r\n  isFieldFull() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        if (this.field[row][col] === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  has2048Value() {\r\n    for (let row = 0; row < 4; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        if (this.field[row][col] === 2048) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nconst game = new Game();\r\n\r\nconst scoreBoard = document.getElementById('gameScore');\r\nconst startButton = document.getElementById('buttonStart');\r\n\r\nconst startMessage = document.getElementById('startMessage');\r\nconst winMessage = document.getElementById('winMessage');\r\nconst lostMessage = document.getElementById('loseMessage');\r\n\r\nstartButton.onclick = () => {\r\n  game.startGame();\r\n\r\n  startMessage.classList.add('hidden');\r\n  startButton.classList.remove('start');\r\n  startButton.classList.add('restart');\r\n  startButton.innerText = 'Restart';\r\n\r\n  document.addEventListener('keydown', handleKeyPress);\r\n\r\n  scoreBoard.innerText = game.totalValue;\r\n};\r\n\r\nfunction handleKeyPress(keyEvent) {\r\n  switch (keyEvent.key) {\r\n    case 'ArrowUp':\r\n      game.goUp();\r\n      break;\r\n    case 'ArrowDown':\r\n      game.goDown();\r\n      break;\r\n    case 'ArrowLeft':\r\n      game.goLeft();\r\n      break;\r\n    case 'ArrowRight':\r\n      game.goRight();\r\n      break;\r\n  }\r\n\r\n  game.reRender();\r\n  game.countTotalValue();\r\n  game.isGameOverMethod();\r\n\r\n  if (game.has2048Value()) {\r\n    winMessage.classList.remove('hidden');\r\n  }\r\n\r\n  if (game.isGameOver) {\r\n    document.removeEventListener('keydown', handleKeyPress);\r\n    lostMessage.classList.remove('hidden');\r\n  }\r\n\r\n  scoreBoard.innerText = game.totalValue;\r\n}\r\n"]}